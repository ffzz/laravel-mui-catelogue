version: '3.8'

services:
  # Laravel application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-mui-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./storage:/var/www/html/storage
    environment:
      - APP_ENV=local
      - APP_KEY=${APP_KEY:-base64:4tszo/3aFh4oJXamgq7o1lAvcQTKmslejKGH7oi5MSY=}
    depends_on:
      - redis
    networks:
      - app-network

  # Web server
  web:
    image: nginx:alpine
    container_name: laravel-mui-web
    restart: unless-stopped
    ports:
      - '8000:80'
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - app-network

  # Redis service
  redis:
    image: redis:alpine
    container_name: laravel-mui-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    networks:
      - app-network

  # Queue worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-mui-queue
    restart: unless-stopped
    working_dir: /var/www/html
    command: php artisan queue:work --tries=3
    volumes:
      - ./storage:/var/www/html/storage
    environment:
      - APP_ENV=local
      - APP_KEY=${APP_KEY:-base64:4tszo/3aFh4oJXamgq7o1lAvcQTKmslejKGH7oi5MSY=}
    depends_on:
      - app
      - redis
    networks:
      - app-network

  # Scheduler
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-mui-scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    entrypoint: ['sh', '-c', 'while true; do php artisan schedule:run --verbose --no-interaction & sleep 60; done']
    volumes:
      - ./storage:/var/www/html/storage
    environment:
      - APP_ENV=local
      - APP_KEY=${APP_KEY:-base64:4tszo/3aFh4oJXamgq7o1lAvcQTKmslejKGH7oi5MSY=}
    depends_on:
      - app
      - redis
    networks:
      - app-network

# Networks and volumes
networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
